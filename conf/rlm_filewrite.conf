; rlm_filewrite.conf
;
; This is the sample configuration file for the 'rlm_filewrite' RLM for 
; Rivendell, which can be used to write one or more files on the local 
; system using Now & Next data.
;
; To enable this module, add it to the 'Loadable Modules' list in 
; RDAdmin->ManageHosts->RDAirPlay->ConfigureNow&Next.  The 'Argument'
; field should point to the location of this file.

; Section Header
;
; One section per file to be written should be configured, starting with 
; 'File1' and working up consecutively
[File1]

; Filename
;
; The full path to the file to be written.  The user running RDAirPlay
; must have write permissions for this location.
Filename=/tmp/rlm_filewrite.txt

; Append Mode
;
; If set to '0', the file will be completely overwritten with the contents
; of each PAD update.  If set to '1', each update will be appended to the
; existing contents of the file.
Append=0

; Format String.  The string to be output each time RDAirPlay changes
; play state, including any wildcards as placeholders for metadata values.
; The following wildcards are available:
;
;  Now       Next       Field
;  --------------------------------------------------------------------------
;   %n        %N        The Rivendell cart number
;   %h        %H        Event length (in milliseconds)
;   %g        %G        The Rivendell group name
;   %t        %T        Title
;   %a        %A        Artist
;   %l        %L        Album
;   %y        %Y        Year
;   %b        %B        Record Label
;   %c        %C        Client
;   %e        %E        Agency
;   %m        %M        Composer
;   %p        %P        Publisher
;   %r        %R        Conductor
;   %s        %S        Song ID
;   %u        %U        User Definied
;   \r        \r        Carriage Return (ASCII 13)
;   \n        \n        Linefeed (ASCII 10)
;   %d(<dt>)  %D(<dt>)  The start date/time, formatted according to <dt>.  The
;                       following wildcards are available for <dt>:
;                     d - The day as a number without a leading zero (1 to 31).
;                    dd - The day as a number with a leading zero (01 to 31).
;                   ddd - The abbreviated localized day name ('Mon' or 'Sun').
;                  dddd - The long localized day name ('Monday' or 'Sunday').
;                     M - The month as a number without a leading zero
;                         (1 to 12).
;                    MM - The month as a number with a leading zero (01 to 12).
;                   MMM - The abbreviated localized month name ('Jan' or 'Dec').
;                  MMMM - The long localized month name ("January' or
;                         'December').
;                    yy - The last two digits of the year.
;                  yyyy - The full four digits of the year.
;                     h - The hour without a leading zero (0 - 23, or 1 - 12
;                         if using AM/PM display).
;                    hh - The hour with a leading zero (00 - 23, or 01 -12 if
;                         using AM/PM display).
;                     m - The minute without a leading zero (0 - 59).
;                    mm - The minute with a leading zero (00 - 59).
;                     s - The second without a leading zero (00 - 60).
;                    ss - The second with a leading zero (00 - 60).
;                     z - The milliseconds without a leading zero (0 - 999).
;                   zzz - The milliseconds with leading zeros (000 - 999).
;                    AP - Use AM/PM display.  The 'AP' will be replaced by
;                         'AM' or 'PM' as appropriate.
;                    ap - Use AM/PM display.  The 'ap' will be replaced by
;                         'am' or 'pm' as appropriate.
FormatString=NOW: %d(ddd MMM d hh:mm:ss yyyy): %t - %a\nNEXT: %D(ddd MMM d hh:mm:ss yyyy): %T - %A\n

; Encoding.  Defines the set of escapes to be applied to the PAD fields.
; The following options are available:
;
;  0 - Perform no character escaping.
;  1 - "XML" escaping: Escape reserved characters as per XML-v1.0
;  2 - "Web" escaping: Escape reserved characters as per RFC 2396 Section 2.4
Encoding=0

; Log Selection
;
; Set the status for each log to 'Yes', 'No' or 'Onair' to indicate whether
; state changes on that log should be output.  If set to 'Onair', then
; output will be generated only if RDAirPlays OnAir flag is active.
MasterLog=Yes
Aux1Log=Yes
Aux2Log=Yes


; Additional files can be written by adding new sections...
;
;[File2]
;Filename=/home/rd/foo2.txt
;Append=1
;FormatString=%t by %a\r\n
;MasterLog=Yes
;Aux1Log=No
;Aux2Log=Onair
